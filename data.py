# /bin/python data.py
# This file stores lists that will be used as a source for the 
# generator from generator.py 

cs_fields = [
    "Algorithms and Data Structures",
    "Computer Architecture",
    "Operating Systems",
    "Programming Languages",
    "Software Engineering",
    "Databases",
    "Computer Networks",
    "Cybersecurity",
    "Artificial Intelligence",
    "Machine Learning",
    "Deep Learning",
    "Natural Language Processing",
    "Computer Vision",
    "Robotics",
    "Human-Computer Interaction (HCI)",
    "Computer Graphics",
    "Web Development",
    "Mobile Development",
    "Cloud Computing",
    "Distributed Systems",
    "Parallel Computing",
    "Quantum Computing",
    "Theory of Computation",
    "Computational Complexity Theory",
    "Information Theory",
    "Cryptography",
    "Bioinformatics",
    "Data Science",
    "Big Data",
    "Internet of Things (IoT)",
    "Edge Computing",
    "Embedded Systems",
    "Digital Signal Processing (DSP)",
    "Augmented Reality (AR)",
    "Virtual Reality (VR)",
    "DevOps and Site Reliability Engineering (SRE)",
    "Game Development",
    "Compiler Design",
    "Formal Methods",
    "Numerical Computing",
    "Semantic Web",
    "Software Testing and Quality Assurance",
    "Information Retrieval",
    "Computer Forensics",
    "Ethics in Computing",
    "E-Learning Technologies",
    "IT Project Management",
    "Business Intelligence",
    "Knowledge Representation and Reasoning",
    "Computational Linguistics"
]

book_title = [
    "Python Grundlagen kompakt",
    "Einführung in die Programmierlogik",
    "Moderne Softwareentwicklung mit Python",
    "Skriptsprachen im Vergleich",
    "Python in der Praxis",
    "Strukturierte Programmierung",
    "Funktionale Programmierung mit Python",
    "Objektorientierte Konzepte verständlich erklärt",
    "Python für technische Anwendungen",
    "Automatisierung mit Python-Skripten",
    "Algorithmen und Datenstrukturen",
    "Einführung in die Datenanalyse mit Python",
    "Programmieren lernen mit Beispielen",
    "Modulbasierte Softwareentwicklung",
    "Python im wissenschaftlichen Rechnen",
    "Programmieren für Ingenieure",
    "Entwurfsmuster mit Python umsetzen",
    "Python und Datenbanken",
    "Python in der Netzwerktechnik",
    "Sichere Softwareentwicklung mit Python",
    "Programmierung industrieller Anwendungen",
    "Datenvisualisierung mit Matplotlib und Seaborn",
    "Grundlagen des maschinellen Lernens mit Python",
    "Python im Unternehmensumfeld",
    "Softwarequalität und Testen",
    "Versionsverwaltung mit Git und Python",
    "Python in der Cloud",
    "REST-APIs mit Flask",
    "Entwicklung grafischer Benutzeroberflächen",
    "Python und das Internet der Dinge",
    "Asynchrone Programmierung mit asyncio",
    "Python-Projekte effizient verwalten",
    "Erweiterte Python-Techniken",
    "Datenformate und Schnittstellen",
    "Python im Vergleich zu JavaScript",
    "Python-Tooling und Build-Systeme",
    "Code-Dokumentation und Stilregeln",
    "Reguläre Ausdrücke in Python",
    "Dateiverarbeitung mit Python",
    "Schnittstellen mit C und Python",
    "Multithreading und Multiprocessing",
    "Fehlerbehandlung systematisch einsetzen",
    "Deployment von Python-Anwendungen",
    "Python für Systemadministratoren",
    "Testgetriebene Entwicklung",
    "Moderne Webentwicklung mit FastAPI",
    "Python im Bildungsbereich",
    "Performanzanalyse von Python-Code",
    "Simulationen mit Python",
    "Effiziente Datenverarbeitung mit NumPy",
    "Statistik mit Python",
    "Projektorientiertes Arbeiten mit Python",
    "Python im Vergleich zu R",
    "Werkzeuge für Softwarearchitektur",
    "Machine Learning mit Scikit-learn",
    "Deep Learning mit PyTorch",
    "Python auf dem Raspberry Pi",
    "Cloud-native Python-Anwendungen",
    "Python für Automatisierung im Büro",
    "Mathematik mit SymPy",
    "Python für Naturwissenschaften",
    "Zeitreihenanalyse mit Python",
    "Webscraping mit BeautifulSoup",
    "Netzwerkanalyse mit Python",
    "Logik und Boolesche Algebra",
    "Einführung in Jupyter Notebooks",
    "Python und Excel",
    "Professionelles Logging",
    "Debugging-Techniken für Fortgeschrittene",
    "Kommandozeilentools mit Python",
    "Python und maschinelles Sehen",
    "Python im Gesundheitswesen",
    "Robotik mit Python steuern",
    "IoT-Anwendungen mit MicroPython",
    "Statistische Modellierung mit Python",
    "Python und künstliche Intelligenz",
    "Echtzeitanalyse mit Python",
    "Python für Wirtschaftsanalysen",
    "Parallele Programmierung",
    "Signalverarbeitung mit Python",
    "Python und Blockchain-Technologien",
    "Digitale Bildverarbeitung",
    "Werkzeuge zur Codeanalyse",
    "Coding Standards in Python",
    "Python in der Automobilindustrie",
    "Finanzdatenanalyse mit Python",
    "Sensorik und Steuerung mit Python",
    "Technische Dokumentation generieren",
    "Python für Architekten und Planer",
    "KI-Modelle produktiv einsetzen",
    "Software-Deployment in Unternehmen",
    "Big Data mit Dask und Python",
    "Graphentheorie praktisch anwenden",
    "Python in der öffentlichen Verwaltung",
    "Python für GIS-Anwendungen",
    "Schnittstellenprogrammierung mit API",
    "Industrie 4.0 mit Python",
    "Python in der Energiebranche",
    "Anwenderfreundliche CLI-Tools",
    "Modellierung technischer Systeme",
    "Nachhaltige Softwareentwicklung",
    "Kollaborative Entwicklung mit Python",
    "Python im Versicherungswesen",
    "Python für Juristen und Verwaltung",
    "Open Source Projekte verstehen und nutzen"
]